#!/usr/bin/env sh
set -eu

init_shelduck() {
	: "${BOBSHELL_BUILD_ROOT:=./target}"
	mkdir -p "$BOBSHELL_BUILD_ROOT"
	if [ ! -f "$BOBSHELL_BUILD_ROOT/shelduck.sh" ]; then
		curl --fail --silent --show-error --location https://github.com/legeyda/shelduck/releases/latest/download/shelduck.sh \
				> "$BOBSHELL_BUILD_ROOT/shelduck.sh"
	fi
	. "$BOBSHELL_BUILD_ROOT/shelduck.sh"
}

init_shelduck

shelduck import ./string.sh
shelduck import ./run.sh
shelduck import ./dev/tag.sh
shelduck import ./dev/branch.sh
shelduck import ./dev/run.sh



on_start() {
	
	bobshell_dev_branch
	bobshell_result_check bobshell_dev_branch
	
	bobshell_dev_tag
	bobshell_result_check bobshell_dev_tag || true
	
	: "${BOBSHELL_BUILD_ROOT:=./target}"
	mkdir -p "$BOBSHELL_BUILD_ROOT"
	export BOBSHELL_BUILD_ROOT
	if bobshell_starts_with "$BOBSHELL_BUILD_ROOT" / ; then
		return
	fi
	if bobshell_starts_with "$BOBSHELL_BUILD_ROOT" . ; then
		return
	fi
	BOBSHELL_BUILD_ROOT="./$BOBSHELL_BUILD_ROOT"


}

run_test_run() {
	export BOBTEST_FILE="$1"
	export BOBTEST_FUNCTION="$2"
	sh -euc ". '$BOBSHELL_BUILD_ROOT/shelduck.sh'"'
_bobtest_shelduck_run=$(shelduck resolve "file://$BOBTEST_FILE")
${BOBTEST_SHELL_COMMAND:-sh -euc} "$_bobtest_shelduck_run
set -x
$BOBTEST_FUNCTION"'
}

# shellcheck disable=SC2120
run_test() {
	export BOBSHELL_EXIT_TRAP_TRACE_ENABLED=false
	shelduck import file://./bobtest.sh
	# shellcheck disable=SC2034
	BOBTEST_RUN=run_test_run
	
	bobtest "$@"
}


do_build() {
	_do_build__list=$(find . -path '*/.*' -o -path '*/test_*.sh' -o -path "$BOBSHELL_BUILD_ROOT/*" -prune \
			-o -name '*.sh' -printf "do_build_each_file '%P'\n" | sort)
	mkdir -p "$BOBSHELL_BUILD_ROOT/release"
	eval "$_do_build__list" > "$BOBSHELL_BUILD_ROOT/release/bobshell.sh"
	unset _do_build__list
	bobshell_dev_artifacts="$BOBSHELL_BUILD_ROOT/release/bobshell.sh"
}

do_build_each_file() {
	printf '\n\n\n\n\n\n# %s\n' "$*"
	printf 'bobshell_bundle_value=$(cat <<\BOBSHELL_BUNDLE_EOF\n'
	cat "$@"
	printf '\nBOBSHELL_BUNDLE_EOF\n'
	printf ')\n'
	do_build_each_file_printf "heads/main" "$*" # branch not available
	if bobshell_isset bobshell_dev_tag; then
		do_build_each_file_printf "tags/$bobshell_dev_tag" "$*"
	fi
}

do_build_each_file_printf() {
	printf "bobshell_cache_put shelduck_cached_fetch_url/https://raw.githubusercontent.com/legeyda/bobshell/refs/%s/%s\n" "$@"
}



shelduck run ./entry_point.sh "$@"